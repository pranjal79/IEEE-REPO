//DAY 2 IEEE VSSUT STUDENT BRANCH QUESTION AND ANSWER

QN1. Prime Number Checker: 
   Write a function that checks if a given number is prime. A prime number is a number greater than 1 that has no divisors other than 1 and itself.  
   Example:  
   Input: 17  
   Output: True  
   Input: 18  
   Output: False

Answer:
 function checkPrimeNumber(num){
        let i , count=0 ;
        for(i = 1 ; i <= num ;i++)        
        {
            if(num%i == 0)
                {
                    count++;
                }
        }
        return count==2? true : false
    }
    
    let testNum = 2 ; 
    //enter your own value 
    console.log(checkPrimeNumber(testNum)); 
    //output : true

QN2. Strong Number:  
   Write a function that checks if a given number is a strong number. A strong number is a number that is equal to the sum of factorials of the individual digits.  
   Example: 
   Input: 145  
   Output: True
   Explanation: 1!+4!+5! = 145  
   Input: 132  
   Output: False
Answer:
function checkStrongNumber(num){
    let sum=0, temp;
    while(num>0){
        sum += fact(Number.parseInt(num%10));
        num  = Number.parseInt(num / 10);
    }
    return sum == 145 ? true : false
}
function fact(eachNum){
    if(eachNum==0){
        return 1
    }
    return eachNum*fact(eachNum-1);
}

let testNo = 145//test no
console.log(checkStrongNumber(testNo));
//output : true

QN3. Sum of Digits:
   Write a function that calculates the sum of all digits in a given integer.  
   Example:  
   Input: 12345  
   Output: 15 
Answer:
function digitSum(num){
    let sum =  0;
    while(num>0){
        sum += (num%10);
        num = Number.parseInt(num/10);
    }
    return sum;
}

4. Find Maximum Number: 
   Write a function that finds the maximum number in a given list of integers.  
   Example:  
   Input: [1, 7, 3, 9, 2]  
   Output: 9
Answer:
function findMaximumNumber(arr) {
    if (arr.length === 0) {
        return null; // Return null if the array is empty
    }

    let maxNumber = arr[0]; // Assume the first number is the maximum

    for (let i = 1; i < arr.length; i++) {
        if (arr[i] > maxNumber) {
            maxNumber = arr[i]; // Update maxNumber if current number is greater
        }
    }

    return maxNumber;
}

// Example usage:
let numbers = [1, 7, 3, 9, 2];
console.log(findMaximumNumber(numbers)); // Output: 9


Qn5. Fibonacci Sequence:  
   Write a function that takes a number as input and returns a list of Fibonacci numbers of length equal to that number.  
   Example:  
   Input: 5  
   Output:Â [0,1,1,2,3]
Answer:
function generateFibonacciSequence(n) {
    if (n <= 0) {
        return []; // Return an empty array if the input is less than or equal to 0
    }

    let fibSequence = [0]; // Start with the first Fibonacci number

    if (n > 1) {
        fibSequence.push(1); // Add the second Fibonacci number if needed

        for (let i = 2; i < n; i++) {
            const nextFib = fibSequence[i - 1] + fibSequence[i - 2];
            fibSequence.push(nextFib); // Calculate the next Fibonacci number and add it to the sequence
        }
    }

    return fibSequence;
}

// Example usage:
let length = 5;
console.log(generateFibonacciSequence(length)); // Output: [0, 1, 1, 2, 3]
